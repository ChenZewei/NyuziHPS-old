	component fpga_sdram_controller is
		port (
			clk_clk                            : in    std_logic                     := 'X';             -- clk
			reset_reset_n                      : in    std_logic                     := 'X';             -- reset_n
			memory_mem_a                       : out   std_logic_vector(12 downto 0);                    -- mem_a
			memory_mem_ba                      : out   std_logic_vector(2 downto 0);                     -- mem_ba
			memory_mem_ck                      : out   std_logic_vector(0 downto 0);                     -- mem_ck
			memory_mem_ck_n                    : out   std_logic_vector(0 downto 0);                     -- mem_ck_n
			memory_mem_cke                     : out   std_logic_vector(0 downto 0);                     -- mem_cke
			memory_mem_cs_n                    : out   std_logic_vector(0 downto 0);                     -- mem_cs_n
			memory_mem_dm                      : out   std_logic_vector(0 downto 0);                     -- mem_dm
			memory_mem_ras_n                   : out   std_logic_vector(0 downto 0);                     -- mem_ras_n
			memory_mem_cas_n                   : out   std_logic_vector(0 downto 0);                     -- mem_cas_n
			memory_mem_we_n                    : out   std_logic_vector(0 downto 0);                     -- mem_we_n
			memory_mem_reset_n                 : out   std_logic;                                        -- mem_reset_n
			memory_mem_dq                      : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- mem_dq
			memory_mem_dqs                     : inout std_logic_vector(0 downto 0)  := (others => 'X'); -- mem_dqs
			memory_mem_dqs_n                   : inout std_logic_vector(0 downto 0)  := (others => 'X'); -- mem_dqs_n
			memory_mem_odt                     : out   std_logic_vector(0 downto 0);                     -- mem_odt
			oct_rzqin                          : in    std_logic                     := 'X';             -- rzqin
			sdram_avl_slave_waitrequest_n      : out   std_logic;                                        -- waitrequest_n
			sdram_avl_slave_beginbursttransfer : in    std_logic                     := 'X';             -- beginbursttransfer
			sdram_avl_slave_address            : in    std_logic_vector(20 downto 0) := (others => 'X'); -- address
			sdram_avl_slave_readdatavalid      : out   std_logic;                                        -- readdatavalid
			sdram_avl_slave_readdata           : out   std_logic_vector(31 downto 0);                    -- readdata
			sdram_avl_slave_writedata          : in    std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			sdram_avl_slave_byteenable         : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			sdram_avl_slave_read               : in    std_logic                     := 'X';             -- read
			sdram_avl_slave_write              : in    std_logic                     := 'X';             -- write
			sdram_avl_slave_burstcount         : in    std_logic_vector(5 downto 0)  := (others => 'X')  -- burstcount
		);
	end component fpga_sdram_controller;

